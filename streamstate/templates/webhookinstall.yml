apiVersion: argoproj.io/v1alpha1
kind: EventBus
metadata:
  name: default
  # namespace: {{ .Values.namespaces.controlpanenamespace }}
spec:
  nats:
    native:
      # Optional, defaults to 3. If it is < 3, set it to 3, that is the minimal requirement.
      replicas: 3
      # Optional, authen strategy, "none" or "token", defaults to "none"
      auth: token

---
apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: streamstatewebservice
  # namespace: {{ .Values.namespaces.controlpanenamespace }}
  labels:
    eventsource: streamstate
spec:
  replicas: 3 # needed for HA
  webhook:
    # event-source can run multiple HTTP servers. Simply define a unique port to start a new HTTP server
    replay:
      # port to run HTTP server on
      port: "12000"
      # endpoint to listen to
      endpoint: /api/replay 
      # HTTP request method to allow. In this case, only POST requests are accepted
      method: POST

    deploy:
      # port to run HTTP server on
      port: "13000"
      # endpoint to listen to
      endpoint: /api/deploy 
      # HTTP request method to allow. In this case, only POST requests are accepted
      method: POST

---
apiVersion: v1
kind: Service
metadata:
  name: argowebhookreplay
  # namespace: {{ .Values.namespaces.controlpanenamespace }}
  labels:
    service: argowebhookreplay
spec:
  type: ClusterIP
  ports:
  - port: 12000
    protocol: TCP
  selector:
    controller: eventsource-controller
    eventsource-name: streamstatewebservice

---
apiVersion: v1
kind: Service
metadata:
  name: argowebhookdeploy
  # namespace: {{ .Values.namespaces.controlpanenamespace }}
  labels:
    service: argowebhookdeploy
spec:
  type: ClusterIP
  ports:
  - port: 13000
    protocol: TCP
  selector:
    controller: eventsource-controller
    eventsource-name: streamstatewebservice


